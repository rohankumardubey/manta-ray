module {
    @name:          "Ray Tracer"
    @project:       "MantaRay"
    @author:        "Ange Yaghi"
    @maintainer:    "Ange Yaghi"
    @copyright:     "Copyright 2019, Ange Yaghi"
    @doc:           "Defines the simplest ray tracer implementation"
    @version:       "0.0.1a"
    @github:        "github.com/ange-yaghi/manta-ray"
}

private import "../scene/scene.mr"
private import "../camera/cameras.mr"
private import "../surface/materials/material_library.mr"
private import "../types/atomic_types.mr"
private import "../types/conversions.mr"
private import "../image/vector_map.mr"
private import "../signal-processing/filters/filters.mr"
private import "../signal-processing/samplers/samplers.mr"
private import "image_plane.mr"

@doc: "Unidirectional MantaRay ray-tracer"
public node ray_tracer => __mantaray__ray_tracer {
    // Main inputs
    input scene         [scene];
    input camera        [camera];
    input materials     [material_library];
    input sampler       [sampler]: random_sampler(1);

    // Optional inputs
    input multithreaded [bool]: true;
    input threads       [int]: 12;
    input block_size    [int]: 100;
    input background    [vector]: 0.0;
    input deterministic_seed [bool]: false;

    @doc: "Rendered image"
    output image        [vector_map];
}
