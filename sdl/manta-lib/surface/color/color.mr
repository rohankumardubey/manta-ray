module {
    @name:          "Color Utilities"
    @project:       "MantaRay"
    @author:        "Ange Yaghi"
    @maintainer:    "Ange Yaghi"
    @copyright:     "Copyright 2019, Ange Yaghi"
    @doc:           "Utilities for handling colors"
    @version:       "0.0.1a"
    @github:        "github.com/ange-yaghi/manta-ray"
}

private import "../../types/atomic_types.mr"
private import "../../types/conversions.mr"
private import "../../types/operations.mr"

@doc: "Convert gamma curved sRGB space colors to linear vectors"
public node srgb => __mantaray__srgb {
    input r [scalar]: 0.0;
    input g [scalar]: 0.0;
    input b [scalar]: 0.0;
    input a [scalar]: 0.0;

    alias output color [vector];
}

@doc: "Convert gamma curved 8 bit sRGB colors to linear vectors"
public node srgb_i {
    input r [int]: 0x00;
    input g [int]: 0x00;
    input b [int]: 0x00;
    input a [int]: 0x00;

    alias output color: srgb(
        r / 255.0,
        g / 255.0,
        b / 255.0,
        a / 255.0
    );
}

public node aces_fitted => __mantaray__aces_fitted {
    input in [vector];
    alias output out [vector];
}

public node hable_filmic => __mantaray__hable_filmic {
    input in [vector];
    input exposure_bias [scalar]: 2;
    input white_point [scalar]: 11.2;
    alias output out [vector];
}
