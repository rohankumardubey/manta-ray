module {
    @name:          "Cameras"
    @project:       "MantaRay"
    @author:        "Ange Yaghi"
    @maintainer:    "Ange Yaghi"
    @copyright:     "Copyright 2019, Ange Yaghi"
    @doc:           "Library of builtin cameras"
    @version:       "0.0.1a"
    @github:        "github.com/ange-yaghi/manta-ray"
}

private import "lenses.mr"
private import "../types/atomic_types.mr"
private import "../sampler/samplers.mr"

@doc: "Camera channel type"
public node camera => __mantaray__camera { /* void */ }

@doc: "Standard (ideal) camera"
public node standard_camera => __mantaray__standard_camera {
    input up                [vector];
    input position          [vector];
    input direction         [vector];
    input resolution_x      [int];
    input resolution_y      [int];
    input plane_height      [float]: 1.0;
    input plane_distance    [float]: 1.0;
    input samples           [int]: 1;
    input sampler           [sampler_2d]: simple_sampler();

    alias output __out      [::camera];
}

@doc: "Camera with lens effects"
public node lens_camera => __mantaray__lens_camera {
    input lens              [lens];
    input samples           [int];
    input sampler           [sampler_2d]: simple_sampler();

    alias output __out      [::camera];
}
